{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhk22\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uAC1C\\uBC1C\\\\mever\\\\mever-dive\\\\src\\\\page\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode';\nimport { pageState, userState, alertState } from \"../recoil/state\";\nimport ToastAlert from \"./../component/ToastAlert\";\nimport logo from \"../logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  //페이지세팅\n  const setPageInfo = useSetRecoilState(pageState);\n\n  //유저세팅\n  const [userInfo, setUserInfo] = useRecoilState(userState);\n  const tmp_login_info = {\n    tmp_id: \"admin\",\n    tmp_pw: \"1234\"\n  };\n  const navigate = useNavigate();\n  const [loginInfo, setLoginInfo] = useState({\n    id: '',\n    pw: ''\n  });\n\n  //토스트 알람\n  const toastAlert = useSetRecoilState(alertState);\n  const {\n    show,\n    type,\n    msg,\n    delay,\n    openClass\n  } = useRecoilValue(alertState);\n  const googleError = res => {\n    console.log('err res :', res);\n  };\n  const googleOK = response => {\n    if (response) {\n      // 사용자 정보 출력\n      console.log('response', response);\n      const loginInfo = jwtDecode(response.credential);\n      const {\n        name,\n        picture,\n        email\n      } = loginInfo;\n      setUserInfo({\n        ...userState,\n        user_nm: name,\n        login: true\n      });\n      navigate(\"/main\");\n      toastAlert({\n        msg: `${name}님 안녕하세요!`\n      });\n    }\n  };\n  const handleLoginClick = () => {\n    const {\n      id,\n      pw\n    } = loginInfo;\n    const {\n      tmp_id,\n      tmp_pw\n    } = tmp_login_info;\n    if (id === tmp_id && pw === tmp_pw) {\n      setUserInfo({\n        ...userState,\n        user_nm: \"관리자\",\n        login: true\n      });\n      navigate(\"/main\");\n      toastAlert({\n        msg: `로그인에 성공하였습니다`\n      });\n    } else {\n      toastAlert({\n        msg: `계정정보가 틀렸습니다`\n      });\n    }\n  };\n  useEffect(() => {\n    setPageInfo({\n      ...pageState,\n      title: \"LOGIN\"\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page flex-column-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        className: `hello`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        onChange: e => {\n          setLoginInfo({\n            ...loginInfo,\n            id: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        onChange: e => {\n          setLoginInfo({\n            ...loginInfo,\n            pw: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-pbg login-btn\",\n        onClick: handleLoginClick,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submenu-area flex-row-sb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-login-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"social-login-logo\",\n            src: \"/bluechip/images/google-logo.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \"GOOGLE LOGIN\", /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            buttonText: \"Google\\uB85C \\uB85C\\uADF8\\uC778\",\n            accessType: \"offline\",\n            onSuccess: googleOK,\n            onFailure: googleError,\n            cookiePolicy: 'single_host_origin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"join-menu\",\n          children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"join-btn\",\n            onClick: () => {\n              toastAlert({\n                msg: \"현재 가입기간이 아닙니다\"\n              });\n            },\n            children: \" \\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastAlert, {\n      show: show,\n      type: type,\n      msg: msg,\n      delay: delay,\n      openClass: openClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+9oacjGLraV6guAwjS8oPxnzAWY=\", false, function () {\n  return [useSetRecoilState, useRecoilState, useNavigate, useSetRecoilState, useRecoilValue];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","useSetRecoilState","useRecoilState","useRecoilValue","useNavigate","GoogleLogin","jwtDecode","pageState","userState","alertState","ToastAlert","logo","jsxDEV","_jsxDEV","Login","_s","setPageInfo","userInfo","setUserInfo","tmp_login_info","tmp_id","tmp_pw","navigate","loginInfo","setLoginInfo","id","pw","toastAlert","show","type","msg","delay","openClass","googleError","res","console","log","googleOK","response","credential","name","picture","email","user_nm","login","handleLoginClick","title","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","onClick","buttonText","accessType","onSuccess","onFailure","cookiePolicy","_c","$RefreshReg$"],"sources":["C:/Users/lhk22/OneDrive/바탕 화면/개발/mever/mever-dive/src/page/Login.jsx"],"sourcesContent":["\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport { pageState, userState, alertState } from \"../recoil/state\";\r\nimport ToastAlert from \"./../component/ToastAlert\";\r\nimport logo from \"../logo.png\"\r\n\r\nconst Login = () => {\r\n  //페이지세팅\r\n  const setPageInfo = useSetRecoilState(pageState);\r\n\r\n  //유저세팅\r\n  const [userInfo, setUserInfo] = useRecoilState(userState);\r\n  const tmp_login_info = {tmp_id:\"admin\", tmp_pw:\"1234\"};\r\n  const navigate = useNavigate();\r\n  const [loginInfo, setLoginInfo] = useState({id:'', pw:''});\r\n\r\n  //토스트 알람\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n\tconst { show, type, msg, delay, openClass } = useRecoilValue(alertState);\r\n\r\n  const googleError = (res) => {\r\n    console.log('err res :',res);\r\n  }\r\n\r\n  const googleOK = (response) => {\r\n    if (response) {\r\n      // 사용자 정보 출력\r\n      console.log('response',response);\r\n      const loginInfo = jwtDecode(response.credential);\r\n      const { name, picture, email } = loginInfo;\r\n\r\n      setUserInfo({...userState, user_nm:name, login:true });\r\n      navigate(\"/main\");\r\n      toastAlert({ msg: `${name}님 안녕하세요!` });\r\n    }\r\n  }\r\n\r\n  const handleLoginClick = () => {\r\n    const { id, pw } = loginInfo;\r\n    const { tmp_id, tmp_pw } = tmp_login_info;\r\n    if(id === tmp_id && pw === tmp_pw ){\r\n      setUserInfo({...userState, user_nm:\"관리자\", login:true });\r\n      navigate(\"/main\");\r\n      toastAlert({ msg: `로그인에 성공하였습니다` });\r\n\r\n    } else {\r\n      toastAlert({ msg: `계정정보가 틀렸습니다` });\r\n    }\r\n  } \r\n\r\n  useEffect(() => { setPageInfo({...pageState, title:\"LOGIN\"})}, [])\r\n  \r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"login-page flex-column-center\">\r\n        <img src={logo} alt=\"\" className={`hello`}/>\r\n        <input type=\"text\" placeholder=\"아이디를 입력해주세요\" onChange={(e)=>{setLoginInfo({...loginInfo, id:e.target.value})}}/>\r\n        <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" onChange={(e)=>{setLoginInfo({...loginInfo, pw:e.target.value})}}/>\r\n        <button className=\"btn btn-pbg login-btn\" onClick={ handleLoginClick }>로그인</button>\r\n        <div className=\"submenu-area flex-row-sb\">\r\n          <div className=\"social-login-btn\">\r\n            <img className=\"social-login-logo\" src=\"/bluechip/images/google-logo.png\" alt=\"\"  />\r\n            GOOGLE LOGIN\r\n            <GoogleLogin\r\n            buttonText=\"Google로 로그인\"\r\n            accessType=\"offline\"\r\n            onSuccess={googleOK}\r\n            onFailure={googleError}\r\n            cookiePolicy={'single_host_origin'}\r\n          /></div>\r\n\r\n          <p className=\"join-menu\">계정이 없으신가요? \r\n          <span className=\"join-btn\" onClick={ () => {toastAlert({msg:\"현재 가입기간이 아닙니다\"})} }> 회원가입</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\t\t\t<ToastAlert show={show} type={type} msg={msg} delay={delay} openClass={openClass} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}