[{"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\index.jsx":"1","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\App.jsx":"3","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Setting.jsx":"4","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Wallet.jsx":"5","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\View.jsx":"6","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Detail.jsx":"7","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Login.jsx":"8","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Download.jsx":"9","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\MainLayout.jsx":"10","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\recoil\\state.jsx":"11","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\ToastAlert.jsx":"12","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Intro.jsx":"13","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Main.jsx":"14","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\Menu.jsx":"15","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Discover.jsx":"16","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\service-worker.js":"17"},{"size":562,"mtime":1685422185929,"results":"18","hashOfConfig":"19"},{"size":5064,"mtime":1685269523950,"results":"20","hashOfConfig":"19"},{"size":1620,"mtime":1687768291508,"results":"21","hashOfConfig":"19"},{"size":628,"mtime":1685358505700,"results":"22","hashOfConfig":"19"},{"size":1509,"mtime":1687759886422,"results":"23","hashOfConfig":"19"},{"size":1845,"mtime":1687759886422,"results":"24","hashOfConfig":"19"},{"size":4450,"mtime":1685278163158,"results":"25","hashOfConfig":"19"},{"size":3322,"mtime":1687759886405,"results":"26","hashOfConfig":"19"},{"size":2008,"mtime":1685361252720,"results":"27","hashOfConfig":"19"},{"size":2184,"mtime":1687768107296,"results":"28","hashOfConfig":"19"},{"size":890,"mtime":1687769563380,"results":"29","hashOfConfig":"19"},{"size":789,"mtime":1685270999530,"results":"30","hashOfConfig":"19"},{"size":1809,"mtime":1687769584742,"results":"31","hashOfConfig":"19"},{"size":4928,"mtime":1687768176395,"results":"32","hashOfConfig":"19"},{"size":1094,"mtime":1687768457956,"results":"33","hashOfConfig":"19"},{"size":1151,"mtime":1687769383591,"results":"34","hashOfConfig":"19"},{"size":2837,"mtime":1685269036302,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"75id5y",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\index.jsx",[],[],[],"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\App.jsx",["100"],[],"import { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { userState } from \"./recoil/state\";\n\nimport MainLayout from \"./component/MainLayout\";\nimport Intro from \"./page/Intro\";\nimport Login from \"./page/Login\";\nimport Download from \"./page/Download\";\nimport Main from \"./page/Main\";\nimport View from \"./page/View\";\nimport Wallet from \"./page/Wallet\";\nimport Setting from \"./page/Setting\";\nimport Detail from \"./page/Detail\";\nimport Discover from \"./page/Discover\";\n\n\nfunction App() {\n  const [userInfo, setUserInfo] = useRecoilState(userState);\n  const isLogin = userInfo.login;\n  // const isLogin = true;\n  \n  console.log(\"isLogin :\",isLogin);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={isLogin ? <Navigate to=\"/main\" /> : <Navigate to=\"/intro\" />}/>\n        <Route path=\"/Intro\" element={isLogin ? <Navigate to=\"/main\" /> : <Intro/>}/>\n        <Route exact path=\"/login\" element={<Login />} />\n        \n        <Route element={<MainLayout />}>\n          <Route exact path=\"/main\" element={<Main />} />\n          <Route exact path=\"/discover\" element={<Discover />} />\n          <Route exact path=\"/view\" element={<View />} />\n          <Route exact path=\"/wallet\" element={<Wallet />} />\n          <Route exact path=\"/setting\" element={<Setting />} />\n          <Route exact path=\"/download\" element={<Download />} />\n          <Route exact path=\"/detail\" element={isLogin ? <Detail /> : <Intro/>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}\nexport default App;\n","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Setting.jsx",["101"],[],"\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { pageState } from \"../recoil/state\";\r\nimport { WarningFilled } from \"@ant-design/icons\";\r\n\r\nconst Setting = () => {\r\n  const setPageInfo = useSetRecoilState(pageState);\r\n  useEffect(() => { setPageInfo({...pageState, title:\"SETTING\"})}, [])\r\n  \r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"tmp-container\">\r\n        <WarningFilled />\r\n        <p className=\"tmp-title\">페이지 준비중입니다</p>\r\n        <p className=\"tmp-msg\">SETTING PAGE</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Setting;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Wallet.jsx",["102","103"],[],"\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { pageState, alertState } from \"../recoil/state\";\r\nimport { PlusCircleOutlined, DropboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst Wallet = () => {\r\n\tconst setPageInfo = useSetRecoilState(pageState);\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n\r\n\tuseEffect(() => { setPageInfo({...pageState, title:\"WALLET\"})}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className=\"page-container\">\r\n\t\t\t<div className=\"wallet-page\">\r\n\r\n\t\t\t\t<div className=\"my-money-wrapper flex-row-center\">\r\n\t\t\t\t\t<div className=\"my-money-text\">\r\n\t\t\t\t\t\t<p className=\"title\">나의 예치금 잔액</p>\r\n\t\t\t\t\t\t<p className=\"value\">0 원 <span style={{fontSize:14, paddingLeft:10}}>\t▶</span></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img src='/mever-dive/images/gift.jpg' className=\"my-money-img\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"my-account-wrapper\">\r\n\t\t\t\t\t<p>등록된 계좌</p>\r\n\t\t\t\t\t<div className=\"my-account-list\">\r\n\t\t\t\t\t\t<PlusCircleOutlined className=\"btn-add-account\" onClick={ () => {toastAlert({msg:\"로그인 후 이용가능합니다\"})} }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"my-piece-wrapper flex-column-center\">\r\n\t\t\t\t\t<p className=\"title\">소유 조각</p>\r\n\t\t\t\t\t<span className=\"tmp-text\">텅</span>\r\n\t\t\t\t\t<DropboxOutlined />\r\n\t\t\t\t\t<p className='subtext'>현재 소유한 조각이 없습니다</p>\r\n\t\t\t\t\t<p className='subtext'>얼른 조각구매를 시작해보세요!</p>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Wallet;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\View.jsx",["104","105"],[],"\r\nimport { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { pageState, alertState } from \"../recoil/state\";\r\n\r\nconst View = () => {\r\n\tconst setPageInfo = useSetRecoilState(pageState);\r\n\t\r\n  useEffect(() => { setPageInfo({...pageState, title:\"VIEW\"}); handleMenuClick();}, [])\r\n\r\n  const handleMenuClick = () => {\r\n    const headerMenu = document.querySelectorAll(\".view-header li\");\r\n\r\n    headerMenu.forEach((v) => { \r\n      v.addEventListener('click', (e) => { \r\n        console.log(\"zz\");\r\n        headerMenu.forEach((k) => {\r\n          k.classList.remove(\"selected\");\r\n        });\r\n        v.classList.add(\"selected\");\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"view-page nowrap\">\r\n        <img alt='' src='/mever-dive/images/magazine.jpg' className=\"view-top-img\"/>\r\n        <div className=\"view-container\">\r\n          <ul className=\"view-header flex-row-start\">\r\n            <li>전체</li>\r\n            <li>포트폴리오</li>\r\n            <li>트렌드</li>\r\n            <li>최신뉴스</li>\r\n            <li>핫플레이스</li>\r\n          </ul>\r\n          <div className=\"view-list\">\r\n          {\r\n            Array.from({ length: 20 }, (_, index) => (\r\n              <div key={index} className=\"view-list-item\">\r\n                <div className=\"view-list-text\">\r\n                  <p className=\"title\">블루칩 서비스 오픈</p>\r\n                  <p className=\"subtitle\">서비스 내용 상세</p>\r\n                  <p className=\"contents\">2023.05.30 서비스..</p>\r\n                </div>\r\n                <div className=\"view-list-thumb\"></div>\r\n              </div>\r\n            ))\r\n          }\r\n          <div className=\"footer-box\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default View;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Detail.jsx",["106"],[],"\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { pageState } from \"../recoil/state\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined, CrownFilled, GiftFilled, LikeFilled, SafetyCertificateFilled } from \"@ant-design/icons\";\r\n\r\nconst Detail = () => {\r\n\tconst [pageInfo, setPageInfo] = useRecoilState(pageState);\r\n\tconst [infoPop, setInfoPop] = useState(false);\r\n\tconst [item, setItem] = useState({});\r\n\t\r\n\t//세자리마다 콤마찍기\r\n\tfunction numCommas(x) {\r\n\t\tif (x !== undefined && x !== null) {\r\n\t\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => { \r\n\t\tsetPageInfo({...pageInfo, title:\"상세정보\"});\r\n\t\tlet { title, subtitle, path, contents, date, url, price } = pageInfo.info;\r\n\t\tsetItem({ title, subtitle, path, contents, date, url, price });\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className=\"page-container\">\r\n\t\t\t<div className=\"iframe-wrapper\">\r\n\t\t\t\t<iframe src={`${item.url}`} frameBorder=\"0\" title=\"test\"></iframe>\r\n\t\t\t</div>\r\n\t\t\t<div className={`item-info-container flex-column-start ${infoPop && 'show'}`}>\r\n\t\t\t\t<div className={`item-info-header`} onClick={ () => {setInfoPop(!infoPop)} }>\r\n\t\t\t\t\t상세정보\r\n\t\t\t\t\t{ infoPop === false ? <ArrowUpOutlined /> : <ArrowDownOutlined /> }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"item-info-main\">\r\n\t\t\t\t\t<p className=\"item-wrap-title\">판매 현황</p>\r\n\t\t\t\t\t<div className=\"sales-progress-container\">\r\n\t\t\t\t\t\t<div className=\"bar-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"progress-bar\" style={ {width:infoPop && parseInt((item.price/5000000000)*100)+\"%\"}}></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-text-wrapper\">\r\n\t\t\t\t\t\t\t<p className=\"sales-title\">총 판매 누적 금액</p>\r\n\t\t\t\t\t\t\t<p className=\"sales-amount\">{numCommas(item.price)} 원</p>\r\n\t\t\t\t\t\t\t<p className=\"sales-percent\">{parseInt((item.price/5000000000)*100)}%</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"sales-summary-wrapper\">\r\n\t\t\t\t\t\t<div className=\"sales-summary-text flex-row-sb\">\r\n\t\t\t\t\t\t\t<p className=\"title\">총 판매금액</p>\r\n\t\t\t\t\t\t\t<p className=\"amount\">{numCommas(item.price)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-summary-text flex-row-sb\">\r\n\t\t\t\t\t\t\t<p className=\"title\">판매 기간</p>\r\n\t\t\t\t\t\t\t<p className=\"amount\">2023.05.29 ~ 2023.06.31</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"item-wrap-title\">투자 포인트</p>\r\n\t\t\t\t\t<div className=\"sales-point-wrapper flex-row-center\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<CrownFilled />\r\n\t\t\t\t\t\t\t<p className=\"point-text\">판매1등</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<GiftFilled />\r\n\t\t\t\t\t\t\t<p className=\"point-text\">선물용</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<LikeFilled />\r\n\t\t\t\t\t\t\t<p className=\"point-text\">추천상품</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<SafetyCertificateFilled />\r\n\t\t\t\t\t\t\t<p className=\"point-text\">안전보장</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"item-wrap-title\">판매 정보</p>\r\n\t\t\t\t\t<div className=\"sales-info-wrapper\">\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">포트폴리오</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{item.title}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">부제</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{item.subtitle}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">설명</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{item.contents}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">URL</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{item.url}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">총 판매금액</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{numCommas(item.price)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">구매가능금액</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">최소 1만 원 ~ 최대 1,000만 원</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">운용기간</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">1년 (조기 분배 가능)</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sales-info-contents\">\r\n\t\t\t\t\t\t\t<p className=\"title\">게시날짜</p>\r\n\t\t\t\t\t\t\t<p className=\"value\">{item.date}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`item-info-bottom flex-row-center ${infoPop && \"show\"}`}>\r\n\t\t\t\t\t<button className=\"btn btn-pbg\">구매하기</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Detail;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Login.jsx",["107","108","109","110"],[],"\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport { pageState, userState, alertState } from \"../recoil/state\";\r\nimport ToastAlert from \"./../component/ToastAlert\";\r\n\r\nconst Login = () => {\r\n  //페이지세팅\r\n  const setPageInfo = useSetRecoilState(pageState);\r\n\r\n  //유저세팅\r\n  const [userInfo, setUserInfo] = useRecoilState(userState);\r\n  const tmp_login_info = {tmp_id:\"admin\", tmp_pw:\"1234\"};\r\n  const navigate = useNavigate();\r\n  const [loginInfo, setLoginInfo] = useState({id:'', pw:''});\r\n\r\n  //토스트 알람\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n\tconst { show, type, msg, delay, openClass } = useRecoilValue(alertState);\r\n\r\n  const googleError = (res) => {\r\n    console.log('err res :',res);\r\n  }\r\n\r\n  const googleOK = (response) => {\r\n    if (response) {\r\n      // 사용자 정보 출력\r\n      console.log('response',response);\r\n      const loginInfo = jwtDecode(response.credential);\r\n      const { name, picture, email } = loginInfo;\r\n\r\n      setUserInfo({...userState, user_nm:name, login:true });\r\n      navigate(\"/main\");\r\n      toastAlert({ msg: `${name}님 안녕하세요!` });\r\n    }\r\n  }\r\n\r\n  const handleLoginClick = () => {\r\n    const { id, pw } = loginInfo;\r\n    const { tmp_id, tmp_pw } = tmp_login_info;\r\n    if(id === tmp_id && pw === tmp_pw ){\r\n      setUserInfo({...userState, user_nm:\"관리자\", login:true });\r\n      navigate(\"/main\");\r\n      toastAlert({ msg: `로그인에 성공하였습니다` });\r\n\r\n    } else {\r\n      toastAlert({ msg: `계정정보가 틀렸습니다` });\r\n    }\r\n  } \r\n\r\n  useEffect(() => { setPageInfo({...pageState, title:\"LOGIN\"})}, [])\r\n  \r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"login-page flex-column-center\">\r\n        <img src={'/dive/images/logo.png'} alt=\"\" className={`main-logo`}/>\r\n        <p className=\"logo-text\">DIVE THE METAVERSE</p>\r\n        <input type=\"text\" placeholder=\"아이디를 입력해주세요\" onChange={(e)=>{setLoginInfo({...loginInfo, id:e.target.value})}}/>\r\n        <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" onChange={(e)=>{setLoginInfo({...loginInfo, pw:e.target.value})}}/>\r\n        <button className=\"btn btn-pbg login-btn\" onClick={ handleLoginClick }>로그인</button>\r\n        <div className=\"submenu-area flex-row-sb\">\r\n          <div className=\"social-login-btn\">\r\n            <img className=\"social-login-logo\" src=\"/dive/images/google-logo.png\" alt=\"\"  />\r\n            GOOGLE LOGIN\r\n            <GoogleLogin\r\n            buttonText=\"Google로 로그인\"\r\n            accessType=\"offline\"\r\n            onSuccess={googleOK}\r\n            onFailure={googleError}\r\n            cookiePolicy={'single_host_origin'}\r\n          /></div>\r\n\r\n          <p className=\"join-menu\">계정이 없으신가요? \r\n          <span className=\"join-btn\" onClick={ () => {toastAlert({msg:\"현재 가입기간이 아닙니다\"})} }> 회원가입</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\t\t\t<ToastAlert show={show} type={type} msg={msg} delay={delay} openClass={openClass} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Download.jsx",["111"],[],"import { useEffect, useState } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { AppleFilled, AndroidFilled } from \"@ant-design/icons\";\r\nimport { pageState } from \"../recoil/state\";\r\n\r\nimport logo from \"../logo.png\"\r\n\r\nconst Download = () => {\r\n\tconst setPageInfo = useSetRecoilState(pageState);\r\n\tconst [ landing, setLanding] = useState(false)\r\n\tconst [deferredPrompt, setDeferredPrompt] = useState(null);\r\n  useEffect(() => {\r\n\t\tsetLanding(true); setPageInfo({...pageState, title:\"정보\"});\r\n    const handleBeforeInstallPrompt = (event) => {\r\n      event.preventDefault();\r\n      console.log(\"event \",event)\r\n      setDeferredPrompt(event);\r\n    };\r\n\r\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    return () => {\r\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const handleAppInstall = () => {\r\n\r\n    if (deferredPrompt) {\r\n      console.log(\"설치팝업\")\r\n      deferredPrompt.prompt();\r\n      deferredPrompt.userChoice\r\n        .then((choiceResult) => {\r\n          if (choiceResult.outcome === 'accepted') {\r\n            console.log('사용자가 앱을 설치했습니다.');\r\n          } else {\r\n            console.log('사용자가 앱 설치를 거부했습니다.');\r\n          }\r\n          setDeferredPrompt(null);\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`download-page flex-row-center ${landing ? \"\" : \"hidden\"}`}>\r\n\t\t\t\t<img src={logo} alt=\"\" />\r\n\t\t\t\t<p className=\"download-msg\">보다 최적화된 환경에서 이용해보세요</p>\r\n\t\t\t\t<button className={`btn-download btn btn-pbg`} onClick={handleAppInstall}>ANDROID <AndroidFilled style={{fontSize:18}} /></button>\r\n\t\t\t\t<button className={`btn-download btn btn-pbg btn-disable`} onClick={handleAppInstall}>IOS <AppleFilled style={{fontSize:18}} /></button>\r\n\t\t\t\t<p className=\"version\">0.0.1</p>\r\n\t\t\t\t<p className=\"copyright\">ⓒ meVer</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Download;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\MainLayout.jsx",["112","113"],[],"import { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { SearchOutlined, MenuOutlined} from \"@ant-design/icons\";\r\nimport { pageState, userState, alertState, menuState } from \"../recoil/state\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState, useSetRecoilState } from \"recoil\";\r\nimport ToastAlert from \"./../component/ToastAlert\";\r\nimport Menu from \"./../component/Menu\";\r\n\r\nconst MainLayout = () => {\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  \t//toastAlert 상태관리\r\n\tconst { show, type, msg, delay, openClass } = useRecoilValue(alertState);\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n\r\n  //전역 페이지 정보 가져오기\r\n  const pageInfo = useRecoilValue(pageState); \r\n\r\n  //유저정보\r\n  const userInfo = useRecoilValue(userState);\r\n  const resetUser = useResetRecoilState(userState);\r\n  \r\n  //메뉴 상태관리\r\n  const [ menu, setMenu ]  = useRecoilState(menuState);\r\n  \r\n  const initPage = () => {\r\n    resetUser();\r\n    navigate('/main');\r\n    toastAlert({ msg: `로그아웃 되었습니다` });\r\n  }\r\n\r\n  const handleMenuClick = () => {\r\n    setMenu(!menu);\r\n  }\r\n\r\n  const handleSearchClick = () => {\r\n    navigate(\"/search\");\r\n  }\r\n  return (\r\n    <>       \r\n      <header className={`flex-row-sb  ${pageInfo.title === \"상세정보\" && 'hidden'}`}>\r\n        <div className=\"header-logo\"><img src=\"/dive/images/logo.png\" alt=\"\" /></div>\r\n        <div className=\"header-center flex-column-center\">\r\n          <p className=\"header-title\">{pageInfo.title}</p>\r\n          <p className=\"header-subtitle\">{pageInfo.subtitle}</p>\r\n        </div>\r\n        <div className=\"header-button\">\r\n          <SearchOutlined onClick={handleSearchClick}/>\r\n          <MenuOutlined onClick={handleMenuClick}/>\r\n        </div>\r\n      </header> \r\n      <Menu/>\r\n      <footer id=\"BOTTOM_BAR\" className={`flex-row-center ${pageInfo.title === \"상세정보\" && 'hidden'}`}>\r\n        <img src=\"/dive/images/btn_upload.png\" alt=\"\" />\r\n      </footer>\r\n      <section>\r\n        <Outlet></Outlet>\r\n      </section>\r\n\t\t\t<ToastAlert show={show} type={type} msg={msg} delay={delay} openClass={openClass} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainLayout;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\recoil\\state.jsx",[],[],"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\ToastAlert.jsx",["114"],[],"import { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { alertState } from \"../recoil/state\";\r\n\r\nconst ToastAlert = ({ show=true, type='ok', msg, delay=2000 }) => {\r\n  //alert 상태관리\r\n  const [open, setOpenClass] = useState(\"\"); //toastAlert 클래스관리(애니메이션)\r\n  const [toastState, setToastState] = useRecoilState(alertState);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetOpenClass('open');\r\n\t\tlet tmp_hold_timer = setTimeout(() => { setToastState({...toastState, show:false})},delay);\r\n\t\t\r\n\t\treturn () => { clearTimeout(tmp_hold_timer); } \r\n\r\n\t}, [show])\r\n\r\n\tif(show){ return( <div className={`toast-alert ${type} ${open}`}>{msg}</div> )}\r\n\telse { return( <div className={`toast-alert ${type}`}>{msg}</div> )}\r\n}\r\n\r\nexport default ToastAlert;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Intro.jsx",["115"],[],"\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilState, useResetRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { CompassFilled, LoginOutlined } from \"@ant-design/icons\";\r\n\r\nimport { userState, alertState } from \"../recoil/state\";\r\nimport logo from \"../logo.png\"\r\nimport ToastAlert from \"../component/ToastAlert\";\r\n\r\n\r\nconst Intro = () => {\r\n\tconst [userInfo, setUserInfo] = useRecoilState(userState);\r\n\tconst [landing, setLanding] = useState(false);\r\n\tconst resetUser =  useResetRecoilState(userState);\r\n\r\n\tconst { show, type, msg, delay, openClass } = useRecoilValue(alertState);\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n\r\n\tuseEffect(() => { setLanding(true); resetUser(); console.log(\"userState :\",userInfo) }, [])\r\n\r\n\tconst guestLogin = () => {\r\n\t\tsetLanding(false);\r\n\t\tsetUserInfo({...userInfo, user_nm:\"GUEST\", login:true});\r\n\t\ttoastAlert({ msg: `GUEST 로그인되었습니다` });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"page-container\">\r\n\t\t\t<div className={`intro-page`}>\r\n\t\t\t\t<img src={logo} alt=\"\" className={`start-img ${landing && \"show\"}`} />\r\n\t\t\t\t<p className={`intro-msg ${landing && \"show\"}`}>DIVE THE METAVERSE</p>\r\n\t\t\t\t<Link to=\"/login\" style={{width:\"100%\"}}>\r\n\t\t\t\t\t<button className={`btn-login btn btn-pbg ${landing && \"show\"}`}>로그인<LoginOutlined /></button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/main\" style={{width:\"100%\"}} onClick={ guestLogin }>\r\n\t\t\t\t\t<button className={`btn-start btn btn-pbg ${landing && \"show\"}`}>체험하기<CompassFilled /></button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<span className={`powered-by ${landing && \"show\"}`}>powered by meVer</span>\r\n\t\t\t</div>\r\n\t\t\t<ToastAlert show={show} type={type} msg={msg} delay={delay} openClass={openClass} />\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default Intro;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Main.jsx",["116","117","118"],[],"\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { pageState, alertState } from \"../recoil/state\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n\r\n  const [pageInfo, setPageInfo] = useRecoilState(pageState);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => { setPageInfo({...pageInfo, title:\"HOME\", subtitle:\"오늘의 투어\"})}, []);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main-container\">\r\n      <div className=\"content-box\">\r\n        <p className=\"content-title\">TOP 10</p>\r\n        <ul className=\"content-list\">\r\n          <li onClick={ () => {navigate(\"/discover\")} }>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"content-box\">\r\n        <p className=\"content-title\">주목할만한 장소</p>\r\n        <ul className=\"content-list\">\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <h2 style={{marginLeft:20}}>카테고리별</h2>\r\n      <div className=\"content-box\">\r\n        <p className=\"content-title\">CATEGORY #1</p>\r\n        <ul className=\"content-list\">\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"content-box\">\r\n        <p className=\"content-title\">CATEGORY #2</p>\r\n        <ul className=\"content-list\">\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"thumb\"></div>\r\n            <div className=\"context\">\r\n              <p className=\"title\">제목</p>\r\n              <p className=\"desc\">설명</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\component\\Menu.jsx",[],[],"C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\page\\Discover.jsx",["119","120","121","122","123","124"],[],"\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { pageState, alertState } from \"../recoil/state\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { HeartOutlined, HeartFilled, CompassFilled, WechatFilled, InfoCircleFilled, UploadOutlined } from \"@ant-design/icons\";\r\n\r\nconst Main = () => {\r\n\r\n  const [pageInfo, setPageInfo] = useRecoilState(pageState);\r\n\tconst toastAlert = useSetRecoilState(alertState);\r\n  const navigate = useNavigate();\r\n  const [ heart, setHeart ] = useState(false);\r\n\r\n  const handleHeartClick = () => {\r\n    setHeart(!heart);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"discover-container\">\r\n        <div className=\"icon-container\">\r\n          { heart ? <HeartFilled onClick={handleHeartClick}/> : <HeartOutlined onClick={handleHeartClick}/> }\r\n          <UploadOutlined />\r\n          <WechatFilled />\r\n        </div>\r\n          <InfoCircleFilled/>\r\n          <CompassFilled/>\r\n        <iframe src=\"https://my.matterport.com/show/?play=1&share=0&wh=0&m=kU9eeAy9kCj\" frameborder=\"0\"></iframe>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","C:\\Users\\lhk22\\OneDrive\\바탕 화면\\개발\\mever\\mever-dive\\src\\service-worker.js",[],["125","126","127","128"],{"ruleId":"129","severity":1,"message":"130","line":18,"column":20,"nodeType":"131","messageId":"132","endLine":18,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":9,"column":68,"nodeType":"135","endLine":9,"endColumn":70,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"134","line":11,"column":66,"nodeType":"135","endLine":11,"endColumn":68,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":22,"column":6,"nodeType":"140","endLine":22,"endColumn":69},{"ruleId":"129","severity":1,"message":"141","line":4,"column":21,"nodeType":"131","messageId":"132","endLine":4,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":9,"column":85,"nodeType":"135","endLine":9,"endColumn":87,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"143","line":25,"column":5,"nodeType":"135","endLine":25,"endColumn":7,"suggestions":"144"},{"ruleId":"129","severity":1,"message":"145","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":18},{"ruleId":"129","severity":1,"message":"146","line":34,"column":21,"nodeType":"131","messageId":"132","endLine":34,"endColumn":28},{"ruleId":"129","severity":1,"message":"147","line":34,"column":30,"nodeType":"131","messageId":"132","endLine":34,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":55,"column":66,"nodeType":"135","endLine":55,"endColumn":68,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"134","line":24,"column":6,"nodeType":"135","endLine":24,"endColumn":8,"suggestions":"149"},{"ruleId":"129","severity":1,"message":"145","line":20,"column":9,"nodeType":"131","messageId":"132","endLine":20,"endColumn":17},{"ruleId":"129","severity":1,"message":"150","line":26,"column":9,"nodeType":"131","messageId":"132","endLine":26,"endColumn":17},{"ruleId":"133","severity":1,"message":"151","line":17,"column":5,"nodeType":"135","endLine":17,"endColumn":11,"suggestions":"152"},{"ruleId":"133","severity":1,"message":"153","line":20,"column":90,"nodeType":"135","endLine":20,"endColumn":92,"suggestions":"154"},{"ruleId":"129","severity":1,"message":"155","line":2,"column":26,"nodeType":"131","messageId":"132","endLine":2,"endColumn":43},{"ruleId":"129","severity":1,"message":"141","line":3,"column":21,"nodeType":"131","messageId":"132","endLine":3,"endColumn":31},{"ruleId":"133","severity":1,"message":"143","line":12,"column":83,"nodeType":"135","endLine":12,"endColumn":85,"suggestions":"156"},{"ruleId":"129","severity":1,"message":"157","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":19},{"ruleId":"129","severity":1,"message":"158","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":18},{"ruleId":"129","severity":1,"message":"159","line":10,"column":20,"nodeType":"131","messageId":"132","endLine":10,"endColumn":31},{"ruleId":"129","severity":1,"message":"160","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":18},{"ruleId":"129","severity":1,"message":"161","line":12,"column":9,"nodeType":"131","messageId":"132","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":28,"column":9,"nodeType":"140","endLine":28,"endColumn":105},{"ruleId":"164","severity":2,"message":"165","line":22,"column":18,"nodeType":"131","messageId":"166","endLine":22,"endColumn":22,"suppressions":"167"},{"ruleId":"164","severity":2,"message":"165","line":53,"column":31,"nodeType":"131","messageId":"166","endLine":53,"endColumn":35,"suppressions":"168"},{"ruleId":"164","severity":2,"message":"165","line":66,"column":1,"nodeType":"131","messageId":"166","endLine":66,"endColumn":5,"suppressions":"169"},{"ruleId":"164","severity":2,"message":"165","line":68,"column":5,"nodeType":"131","messageId":"166","endLine":68,"endColumn":9,"suppressions":"170"},"no-unused-vars","'setUserInfo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPageInfo'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alertState' is defined but never used.",["173"],"React Hook useEffect has missing dependencies: 'pageInfo' and 'setPageInfo'. Either include them or remove the dependency array.",["174"],"'userInfo' is assigned a value but never used.","'picture' is assigned a value but never used.","'email' is assigned a value but never used.",["175"],["176"],"'initPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'delay', 'setToastState', and 'toastState'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has missing dependencies: 'resetUser' and 'userInfo'. Either include them or remove the dependency array.",["178"],"'useSetRecoilState' is defined but never used.",["179"],"'useEffect' is defined but never used.","'pageInfo' is assigned a value but never used.","'setPageInfo' is assigned a value but never used.","'toastAlert' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-restricted-globals","Unexpected use of 'self'.","defaultMessage",["180"],["181"],["182"],["183"],{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},{"desc":"184","fix":"190"},{"desc":"184","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"188","fix":"196"},{"kind":"197","justification":"198"},{"kind":"197","justification":"198"},{"kind":"197","justification":"198"},{"kind":"197","justification":"198"},"Update the dependencies array to be: [setPageInfo]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},"Update the dependencies array to be: [pageInfo, setPageInfo]",{"range":"203","text":"204"},{"range":"205","text":"200"},{"range":"206","text":"200"},"Update the dependencies array to be: [delay, setToastState, show, toastState]",{"range":"207","text":"208"},"Update the dependencies array to be: [resetUser, userInfo]",{"range":"209","text":"210"},{"range":"211","text":"204"},"directive","",[328,330],"[setPageInfo]",[412,414],[304,306],[847,849],"[pageInfo, setPageInfo]",[1739,1741],[869,871],[566,572],"[delay, setToastState, show, toastState]",[809,811],"[resetUser, userInfo]",[413,415]]